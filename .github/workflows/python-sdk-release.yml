name: Release Python SDK

on:
  push:
    tags:
      - 'python-sdk-v*'
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v1

    - name: Install package with test extras
      run: uv pip install --system -e sdk/python[tests]

    - name: Run tests
      run: pytest sdk/python/tests

  publish-pypi:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/python-sdk-v}" >> $GITHUB_OUTPUT

    - name: Update pyproject.toml version
      working-directory: ./sdk/python
      run: |
        sed -i 's/^version = ".*"/version = "${{ steps.get_version.outputs.VERSION }}"/' pyproject.toml
        cat pyproject.toml | grep version

    - name: Build package
      working-directory: ./sdk/python
      run: python -m build

    - name: Publish to PyPI
      working-directory: ./sdk/python
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*

  create-release:
    needs: [test, publish-pypi]
    runs-on: ubuntu-latest
    steps:
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/python-sdk-v}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        generate_release_notes: true
        body: |
          ## Python SDK Release

          ### Installation

          ```bash
          pip install superagent-ai==${{ steps.get_version.outputs.VERSION }}
          ```

          ### What's Changed
          See the auto-generated release notes below.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}