name: Release Rust Package

on:
  push:
    tags:
      - 'rust-v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: vibekit-proxy
            asset_name: vibekit-proxy-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: vibekit-proxy
            asset_name: vibekit-proxy-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: vibekit-proxy
            asset_name: vibekit-proxy-darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: vibekit-proxy.exe
            asset_name: vibekit-proxy-windows-amd64.exe

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          rust/target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      working-directory: ./rust
      env:
        CARGO_BUILD_JOBS: 4
      run: cargo build --release --target ${{ matrix.target }} --jobs 4

    - name: Create artifact directory
      run: mkdir artifacts

    - name: Copy artifact (Unix)
      if: runner.os != 'Windows'
      run: cp rust/target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}

    - name: Copy artifact (Windows)
      if: runner.os == 'Windows'
      run: copy rust\target\${{ matrix.target }}\release\${{ matrix.artifact_name }} artifacts\${{ matrix.asset_name }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: artifacts/${{ matrix.asset_name }}

  publish-crate:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/rust-v}" >> $GITHUB_OUTPUT

    - name: Update Cargo.toml version
      working-directory: ./rust
      run: |
        sed -i 's/^version = ".*"/version = "${{ steps.get_version.outputs.VERSION }}"/' Cargo.toml
        cat Cargo.toml | head -10  # Show first 10 lines to verify

    - name: Publish to crates.io
      working-directory: ./rust
      run: cargo publish --allow-dirty --token ${{ secrets.CARGO_TOKEN }}

  publish-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/rust-v}" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.rust
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/rust:${{ steps.get_version.outputs.VERSION }}
          ghcr.io/${{ github.repository }}/rust:latest

  create-release:
    needs: [build, publish-crate, publish-docker]
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/vibekit-proxy-*
        generate_release_notes: true
        body: |
          ## Rust Package Release
          
          ### Installation Options
          
          **Via crates.io:**
          ```bash
          cargo install vibekit-proxy
          ```
          
          **Via Docker:**
          ```bash
          docker pull ghcr.io/${{ github.repository }}/rust:${{ steps.get_version.outputs.VERSION }}
          ```
          
          **Via binary download:**
          Download the appropriate binary for your platform below.
          
          ### What's Changed
          See the auto-generated release notes below.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}