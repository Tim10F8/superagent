version: '3.8'

services:
  vibekit-proxy-node:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
    volumes:
      - ../vibekit.yaml:/app/vibekit.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "http.get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vibekit-network

  vibekit-proxy-rust:
    build:
      context: ..
      dockerfile: docker/Dockerfile.rust
    ports:
      - "8081:8080"
    volumes:
      - ../vibekit.yaml:/app/vibekit.yaml:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "./vibekit-proxy", "status"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - vibekit-network

  redaction-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - PYTHONUNBUFFERED=1
      - HF_HOME=/app/models
    volumes:
      - api-models:/app/models
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - vibekit-network

volumes:
  api-models:

networks:
  vibekit-network:
    driver: bridge